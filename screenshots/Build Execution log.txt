Started by user admin
Obtained Jenkinsfile from git https://github.com/Mohan006007/react-app-docker-deployment.git
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/react-app-docker-deployment
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
Cloning the remote Git repository
Cloning repository https://github.com/Mohan006007/react-app-docker-deployment.git
 > git init /var/lib/jenkins/workspace/react-app-docker-deployment # timeout=10
Fetching upstream changes from https://github.com/Mohan006007/react-app-docker-deployment.git
 > git --version # timeout=10
 > git --version # 'git version 2.43.0'
 > git fetch --tags --force --progress -- https://github.com/Mohan006007/react-app-docker-deployment.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/Mohan006007/react-app-docker-deployment.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
Avoid second fetch
 > git rev-parse refs/remotes/origin/dev^{commit} # timeout=10
Checking out Revision d2ed8eebee0d53fdf3e6b497ec77f8e74adf60b8 (refs/remotes/origin/dev)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f d2ed8eebee0d53fdf3e6b497ec77f8e74adf60b8 # timeout=10
Commit message: "Jenkinsfile fixes"
First time build. Skipping changelog.
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Checkout)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/react-app-docker-deployment/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/Mohan006007/react-app-docker-deployment.git # timeout=10
Fetching upstream changes from https://github.com/Mohan006007/react-app-docker-deployment.git
 > git --version # timeout=10
 > git --version # 'git version 2.43.0'
 > git fetch --tags --force --progress -- https://github.com/Mohan006007/react-app-docker-deployment.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/dev^{commit} # timeout=10
Checking out Revision d2ed8eebee0d53fdf3e6b497ec77f8e74adf60b8 (refs/remotes/origin/dev)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f d2ed8eebee0d53fdf3e6b497ec77f8e74adf60b8 # timeout=10
Commit message: "Jenkinsfile fixes"
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build Docker image)
[Pipeline] script
[Pipeline] {
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker build -t mohan006007/prod .
DEPRECATED: The legacy builder is deprecated and will be removed in a future release.
            Install the buildx component to build images with BuildKit:
            https://docs.docker.com/go/buildx/

Sending build context to Docker daemon  3.733MB
Step 1/7 : FROM node:18
 ---> e3d72aca4924
Step 2/7 : WORKDIR /app
 ---> Using cache
 ---> 7707df49eb2b
Step 3/7 : COPY package.json package-lock.json ./
 ---> Using cache
 ---> 984c8be8db9c
Step 4/7 : RUN npm install
 ---> Using cache
 ---> db8adb38bff3
Step 5/7 : COPY . .
 ---> be8a24f93b32
Step 6/7 : EXPOSE 80
 ---> Running in 29382b240d9e
 ---> Removed intermediate container 29382b240d9e
 ---> 143e4d1b7123
Step 7/7 : CMD ["npm", "start"]
 ---> Running in 3fe1bcac8a54
 ---> Removed intermediate container 3fe1bcac8a54
 ---> eb0b7a800d25
Successfully built eb0b7a800d25
Successfully tagged mohan006007/prod:latest
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Push Docker image)
[Pipeline] script
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withDockerRegistry
Using the existing docker config file.
Removing blacklisted property: auths
$ docker login -u mohan006007 -p ******** https://index.docker.io/v1/
WARNING! Using --password via the CLI is insecure. Use --password-stdin.
WARNING! Your password will be stored unencrypted in /var/lib/jenkins/workspace/react-app-docker-deployment@tmp/d8454015-229d-47db-b9bf-5f92216d9fc1/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
[Pipeline] {
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker tag mohan006007/prod mohan006007/prod:latest
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker push mohan006007/prod:latest
The push refers to repository [docker.io/mohan006007/prod]
75a7e69522a1: Preparing
7a44646cd248: Preparing
cf6bf3a2d791: Preparing
ff8fe64750d3: Preparing
40689c24a66a: Preparing
fef83a3a8b40: Preparing
57edb89ea088: Preparing
6edb22a949de: Preparing
6d58389117c3: Preparing
85c6f0cfb532: Preparing
a4fd1e7df47e: Preparing
2f7b6d216a37: Preparing
fef83a3a8b40: Waiting
57edb89ea088: Waiting
6edb22a949de: Waiting
6d58389117c3: Waiting
85c6f0cfb532: Waiting
a4fd1e7df47e: Waiting
2f7b6d216a37: Waiting
40689c24a66a: Layer already exists
ff8fe64750d3: Layer already exists
57edb89ea088: Layer already exists
fef83a3a8b40: Layer already exists
cf6bf3a2d791: Mounted from mohan006007/dev
6edb22a949de: Layer already exists
6d58389117c3: Layer already exists
7a44646cd248: Mounted from mohan006007/dev
85c6f0cfb532: Layer already exists
2f7b6d216a37: Layer already exists
a4fd1e7df47e: Layer already exists
75a7e69522a1: Pushed
latest: digest: sha256:fe25f704d17e2418ef9694ba6a1166c98385161d2668bd3ba04ea2b326cae331 size: 2840
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withDockerRegistry
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] cleanWs
[WS-CLEANUP] Deleting project workspace...
[WS-CLEANUP] Deferred wipeout is used...
[WS-CLEANUP] done
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
